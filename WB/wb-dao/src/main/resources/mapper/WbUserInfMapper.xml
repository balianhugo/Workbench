<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.gavin.wb.dao.WbUserInfMapper">
  <resultMap id="BaseResultMap" type="dev.gavin.wb.model.WbUserInf">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="org_id" jdbcType="INTEGER" property="orgId" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, login_name, login_password, nick_name, gender, mobile, status, org_id, org_name, 
    email, position
  </sql>
  <select id="selectByExample" parameterType="dev.gavin.wb.model.WbUserInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wb_user_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wb_user_inf
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wb_user_inf
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="dev.gavin.wb.model.WbUserInfExample">
    delete from wb_user_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="dev.gavin.wb.model.WbUserInf">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wb_user_inf (login_name, login_password, nick_name, 
      gender, mobile, status, org_id, 
      org_name, email, position
      )
    values (#{loginName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{mobile,jdbcType=CHAR}, #{status,jdbcType=TINYINT}, #{orgId,jdbcType=INTEGER}, 
      #{orgName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="dev.gavin.wb.model.WbUserInf">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wb_user_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPassword != null">
        login_password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="position != null">
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="dev.gavin.wb.model.WbUserInfExample" resultType="java.lang.Long">
    select count(*) from wb_user_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wb_user_inf
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.loginName != null">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null">
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.orgName != null">
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wb_user_inf
    set user_id = #{record.userId,jdbcType=INTEGER},
      login_name = #{record.loginName,jdbcType=VARCHAR},
      login_password = #{record.loginPassword,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      status = #{record.status,jdbcType=TINYINT},
      org_id = #{record.orgId,jdbcType=INTEGER},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="dev.gavin.wb.model.WbUserInf">
    update wb_user_inf
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dev.gavin.wb.model.WbUserInf">
    update wb_user_inf
    set login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      mobile = #{mobile,jdbcType=CHAR},
      status = #{status,jdbcType=TINYINT},
      org_id = #{orgId,jdbcType=INTEGER},
      org_name = #{orgName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="dev.gavin.wb.model.WbUserInfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wb_user_inf
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>