<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.gavin</groupId>
    <artifactId>wb</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>wb-dao</module>
        <module>wb-service</module>
        <module>wb-web</module>
    </modules>

    <properties>
        <project.build.Encoding>UTF-8</project.build.Encoding>
        <source.compiler.level>1.7</source.compiler.level>
        <target.compiler.level>1.7</target.compiler.level>
        <version.spring>4.3.3.RELEASE</version.spring>
        <version.commons-fileupload>1.3.3</version.commons-fileupload>
        <version.jackson-databind>2.9.10.4</version.jackson-databind>
        <version.fastjson>1.2.31</version.fastjson>
        <version.gson>2.3</version.gson>
        <version.mybatis>3.5.6</version.mybatis>
        <version.mybatis-spring>1.3.0</version.mybatis-spring>
        <version.mysql>5.1.40</version.mysql>
        <version.druid>1.0.26</version.druid>
        <version.junit>4.12</version.junit>
        <version.servlet>3.1.0</version.servlet>
        <version.jstl>1.2</version.jstl>
        <version.jsp-api>2.2</version.jsp-api>
        <version.log4j>2.7</version.log4j>
        <version.slf4j>1.7.21</version.slf4j>
        <version.commons-lang3>3.4</version.commons-lang3>
        <version.commons-codec>1.11</version.commons-codec>
        <version.itextpdf>5.5.13</version.itextpdf>
        <version.poi>3.17</version.poi>
        <version.httpclient>4.5.3</version.httpclient>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- spring 依赖包 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${version.spring}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${version.spring}</version>
            </dependency>

            <!-- web file upload -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${version.commons-fileupload}</version>
            </dependency>

            <!-- json 数据转换 -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${version.jackson-databind}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${version.fastjson}</version>
            </dependency>

            <!-- mybatis的核心包 -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${version.mybatis}</version>
            </dependency>

            <!-- mybatis与Spring整合的核心包 -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${version.mybatis-spring}</version>
            </dependency>

            <!-- 数据库连接池用阿里的 druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${version.druid}</version>
            </dependency>

            <!-- mysql 数据库 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${version.mysql}</version>
            </dependency>

            <!-- 日志 slf4j log4j2-->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${version.log4j}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>

            <!--工具包-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.commons-lang3}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${version.commons-codec}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${version.httpclient}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${version.httpclient}</version>
            </dependency>


            <!-- jsp servlet -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${version.servlet}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${version.jsp-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${version.jstl}</version>
                <scope>provided</scope>
            </dependency>

            <!-- pdf tools -->
            <!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf -->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${version.itextpdf}</version>
            </dependency>

            <!-- poi -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${version.poi}</version>
            </dependency>

            <!-- 测试 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${version.spring}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <deploy.dir>src/main/deploy/dev</deploy.dir>
                <compress.skip>true</compress.skip>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-war-plugin</artifactId>
                            <version>3.0.0</version>
                            <configuration>
                                <!-- 配置打包到war的资源 -->
                                <webResources>
                                    <resource>
                                        <directory>${deploy.dir}/base</directory>
                                        <filtering>false</filtering>
                                        <targetPath>WEB-INF/jsp/</targetPath>
                                    </resource>
                                </webResources>
                                <resourceEncoding>${project.build.Encoding}</resourceEncoding>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <deploy.dir>src/main/deploy/test</deploy.dir>
                <compress.skip>false</compress.skip>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-war-plugin</artifactId>
                            <version>3.0.0</version>
                            <configuration>
                                <!-- 配置打包到war的资源 -->
                                <webResources>
                                    <resource>
                                        <directory>${deploy.dir}/base</directory>
                                        <filtering>false</filtering>
                                        <targetPath>WEB-INF/jsp/</targetPath>
                                    </resource>
                                </webResources>
                                <!-- 这里是防止覆盖 yuicompressor 生成的文件 -->
                                <warSourceExcludes>js/*.js,css/*.css,app/**/*.js</warSourceExcludes>
                                <resourceEncoding>${project.build.Encoding}</resourceEncoding>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>prd</id>
            <properties>
                <deploy.dir>src/main/deploy/prd</deploy.dir>
                <compress.skip>false</compress.skip>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-war-plugin</artifactId>
                            <version>3.0.0</version>
                            <configuration>
                                <!-- 配置打包到war的资源 -->
                                <webResources>
                                    <resource>
                                        <directory>${deploy.dir}/base</directory>
                                        <filtering>false</filtering>
                                        <targetPath>WEB-INF/jsp/</targetPath>
                                    </resource>
                                </webResources>
                                <!-- 这里是防止覆盖 yuicompressor 生成的文件 -->
                                <warSourceExcludes>js/*.js,css/*.css,app/**/*.js</warSourceExcludes>
                                <resourceEncoding>${project.build.Encoding}</resourceEncoding>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <source>${source.compiler.level}</source>
                        <target>${target.compiler.level}</target>
                        <encoding>${project.build.Encoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.1</version>
                    <configuration>
                        <encoding>${project.build.Encoding}</encoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <!-- here the phase you need -->
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${deploy.dir}/config</directory>
                                        <filtering>false</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>1.3.5</version>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${version.mysql}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>yuicompressor-maven-plugin</artifactId>
                    <version>1.5.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compress</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- 是否忽略执行 -->
                        <skip>${compress.skip}</skip>
                        <!-- 读取js,css文件采用UTF-8编码 -->
                        <encoding>UTF-8</encoding>
                        <!-- 是否显示可能的错误 -->
                        <jswarn>false</jswarn>
                        <!-- 若存在已压缩的文件，会先对比源文件是否有改动。有改动便压缩，无改动就不压缩 -->
                        <force>true</force>
                        <!-- 在指定的列号后插入新行 -1表示压缩成一行-->
                        <linebreakpos>-1</linebreakpos>
                        <!-- 压缩之前先执行聚合文件操作 -->
                        <preProcessAggregates>false</preProcessAggregates>
                        <!-- 压缩后是否保存文件后缀 -->
                        <nosuffix>true</nosuffix>
                        <!-- 压缩后加上后缀 -->
                        <suffix>.min</suffix>
                        <!-- 源目录，即需压缩的根目录 -->
                        <!-- <sourceDirectory>${basedir}</sourceDirectory> -->
                        <!-- 压缩js和css文件 -->
                        <includes>
                            <include>js/*.js</include>
                            <include>css/*.css</include>
                            <include>app/**/*.js</include>
                        </includes>
                        <!-- 以下目录和文件不会被压缩 -->
                        <excludes>
                            <exclude>**/*.min.js</exclude>
                            <exclude>**/*.min.css</exclude>
                        </excludes>
                        <!-- 压缩后输出文件目录 -->
                        <!-- <outputDirectory>${basedir}</outputDirectory> -->
                        <!-- 聚合文件 -->
                        <aggregations>
                            <!-- 聚合css文件 -->
                            <aggregation>
                                <!-- 合并每一个文件后插入一新行 -->
                                <insertNewLine>false</insertNewLine>
                                <!-- 聚合后是否删除引入文件 -->
                                <removeIncluded>false</removeIncluded>
                                <!-- 需合并文件的根文件夹 -->
                                <inputDir>${project.build.directory}/${project.build.finalName}/css</inputDir>
                                <!-- 最终合并的输出文件 -->
                                <output>${project.build.directory}/${project.build.finalName}/css/all.min.css</output>
                                <!-- 把以下文件合并成一个文件，是按顺序合并的 -->
                                <includes>
                                    <include>*.css</include>
                                </includes>
                            </aggregation>
                            <!-- 聚合js文件 -->
                            <aggregation>
                                <!-- 合并每一个文件后插入一新行 -->
                                <insertNewLine>false</insertNewLine>
                                <!-- 聚合后是否删除引入文件 -->
                                <removeIncluded>false</removeIncluded>
                                <!-- 需合并文件的根文件夹 -->
                                <inputDir>${project.build.directory}/${project.build.finalName}/js</inputDir>
                                <!-- 最终合并的输出文件 -->
                                <output>${project.build.directory}/${project.build.finalName}/js/all.min.js</output>
                                <!-- 把以下文件合并成一个文件，是按顺序合并的 -->
                                <includes>
                                    <include>*.js</include>
                                </includes>
                            </aggregation>
                        </aggregations>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
